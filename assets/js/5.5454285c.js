(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{351:function(t,s,e){"use strict";e.r(s);var a=e(43),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("ul",[e("li",[e("h4",{attrs:{id:"_1-定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-定义"}},[t._v("#")]),t._v(" 1. 定义")])])]),t._v(" "),e("p",[t._v("XSS全称是Cross Site Scripting，指黑客往HTML文件中或者DOM中注入恶意脚本，从而在用户浏览页面时利用注入的恶意脚本对用户实施攻击的一种手段。")]),t._v(" "),e("ul",[e("li",[e("h4",{attrs:{id:"_2-恶意脚本影响的范围"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-恶意脚本影响的范围"}},[t._v("#")]),t._v(" 2. 恶意脚本影响的范围")])])]),t._v(" "),e("ol",[e("li",[t._v("窃取Cookie信息：恶意JS脚本通过document.cookie获取Cookie信息，然后通过使用了CORS的请求将数据发送给恶意的服务器。")]),t._v(" "),e("li",[t._v("监听用户行为：使用addEventListener接口监听用户的输入。")]),t._v(" "),e("li",[t._v("修改DOM：伪造假的登录窗口。")]),t._v(" "),e("li",[t._v("在页面内生成浮窗广告。")])]),t._v(" "),e("ul",[e("li",[e("h4",{attrs:{id:"_3-三种xss攻击"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-三种xss攻击"}},[t._v("#")]),t._v(" 3. 三种XSS攻击")])]),t._v(" "),e("li",[e("h5",{attrs:{id:"_1-储存型xss攻击"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-储存型xss攻击"}},[t._v("#")]),t._v(" 1. 储存型XSS攻击")])])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://greency.github.io/images-site/youdaoyunbiji/33.png",alt:"image"}})]),t._v(" "),e("ol",[e("li",[t._v("利用漏洞将恶意JS代码提交到数据库中。")]),t._v(" "),e("li",[t._v("用户请求包含了恶意JS代码的页面。")]),t._v(" "),e("li",[t._v("当用户浏览该页面时，恶意JS代码就会将用户的Cookie信息等数据上传到恶意的服务器。")])]),t._v(" "),e("ul",[e("li",[e("h5",{attrs:{id:"_2-反射型xss攻击"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-反射型xss攻击"}},[t._v("#")]),t._v(" 2. 反射型XSS攻击")])])]),t._v(" "),e("p",[t._v("在一个反射型XSS攻击中，恶意JS代码属于用户发送给网站请求中的一部分，随后网站又把恶意JS代码返回给用户。")]),t._v(" "),e("p",[t._v("服务端代码如下：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var express = require('express');\nvar router = express.Router();\n\n\n/* GET home page. */\nrouter.get('/', function(req, res, next) {\n  res.render('index', { title: 'Express',xss:req.query.xss });\n});\n\nmodule.exports = router;\n")])])]),e("p",[t._v("前端代码如下：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("<!DOCTYPE html>\n<html>\n<head>\n  <title><%= title %></title>\n  <link rel='stylesheet' href='/stylesheets/style.css' />\n</head>\n<body>\n  <h1><%= title %></h1>\n  <p>Welcome to <%= title %></p>\n  <div>\n      <%- xss %>\n  </div>\n</body>\n</html>\n")])])]),e("p",[t._v("当在浏览器输入如下地址时，结果如下：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("http://localhost:3000/?xss=<script>alert('你被xss攻击了')<\/script>\n")])])]),e("p",[e("img",{attrs:{src:"https://greency.github.io/images-site/youdaoyunbiji/34.png",alt:"image"}})]),t._v(" "),e("p",[t._v("注意：Web服务器不会储存反射型XSS攻击的恶意脚本，这是和储存型XSSS攻击不同的地方。")]),t._v(" "),e("p",[t._v("==注意：在现实生活中，黑客经常会通过 QQ 群或者邮件等渠道诱导用户去点击这些恶意链接，所以对于一些链接我们一定要慎之又慎。==")]),t._v(" "),e("ul",[e("li",[e("h5",{attrs:{id:"_3-基于dom的xss攻击"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-基于dom的xss攻击"}},[t._v("#")]),t._v(" 3. 基于DOM的XSS攻击")])])]),t._v(" "),e("p",[t._v("基于DOM的XSS攻击是不牵涉到页面Web服务器的。具体来讲，黑客通过各种手段将恶意脚本注入用户的页面中，比如通过网络劫持在页面传输过程中修改HTML页面的内容，这种劫持类型很多，有通过Wifi路由劫持的，有通过本地恶意软件劫持的，它们的共同点是在Web资源传输过程或者用户使用页面的过程中修改Web页面的数据。")]),t._v(" "),e("ul",[e("li",[e("h4",{attrs:{id:"_4-如何防止xss攻击"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-如何防止xss攻击"}},[t._v("#")]),t._v(" 4. 如何防止XSS攻击")])]),t._v(" "),e("li",[e("h5",{attrs:{id:"_1-服务器对输入的数据进行过滤-转码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-服务器对输入的数据进行过滤-转码"}},[t._v("#")]),t._v(" 1. 服务器对输入的数据进行过滤/转码")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("code:<script>alert('你被xss攻击了')<\/script>\n\n//过滤后\ncode:\n\n//转义后：\ncode:&lt;script&gt;alert(&#39;你被xss攻击了&#39;)&lt;/script&gt;\n")])])]),e("ul",[e("li",[e("h5",{attrs:{id:"_2-充分利用csp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-充分利用csp"}},[t._v("#")]),t._v(" 2. 充分利用CSP")])])]),t._v(" "),e("blockquote",[e("p",[t._v("CSP有如下功能：")])]),t._v(" "),e("ol",[e("li",[t._v("限制加载其他域下的资源文件，这样即使黑客插入了一个JS文件，这个JS文件也无法被加载。")]),t._v(" "),e("li",[t._v("禁止向第三方域提交数据，这样用户数据也不会外泄。")]),t._v(" "),e("li",[t._v("禁止执行内联脚本和未授权的脚本。")]),t._v(" "),e("li",[t._v("提供了上报机制，可以帮助我们尽快的发现有哪些XSS攻击。")])]),t._v(" "),e("ul",[e("li",[e("h5",{attrs:{id:"_3-使用httponly属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用httponly属性"}},[t._v("#")]),t._v(" 3. 使用HttpOnly属性")])])]),t._v(" "),e("p",[t._v("设置了HttpOnly属性的Cookie无法被document.cookie读取。")]),t._v(" "),e("p",[t._v("可以通过HttpOnly属性来保护我们的cookie安全。")]),t._v(" "),e("p",[t._v("将Cookie设置为HttpOnly标志，HttpOnly是服务器通过HTTP响应头来设置的：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("set-cookie: NID=189=M8q2FtWbsR8RlcldPVt7qkrqR38LmFY9jUxkKo3-4Bi6Qu_ocNOat7nkYZUTzolHjFnwBw0izgsATSI7TZyiiiaV94qGh-BzEYsNVa7TZmjAYTxYTOM9L_-0CN9ipL6cXi8l6-z41asXtm2uEwcOC5oh9djkffOMhWqQrlnCtOI; expires=Sat, 18-Apr-2020 06:52:22 GMT; path=/; domain=.google.com; HttpOnly\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);